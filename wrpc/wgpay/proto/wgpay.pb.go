// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: proto/wgpay.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Empty response for WGPay
type PEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PEmpty) Reset() {
	*x = PEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PEmpty) ProtoMessage() {}

func (x *PEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PEmpty.ProtoReflect.Descriptor instead.
func (*PEmpty) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{0}
}

type TradeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo  string `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`
	Cashier  string `protobuf:"bytes,2,opt,name=cashier,proto3" json:"cashier,omitempty"`
	Payer    string `protobuf:"bytes,3,opt,name=payer,proto3" json:"payer,omitempty"`
	Payee    string `protobuf:"bytes,4,opt,name=payee,proto3" json:"payee,omitempty"`
	Smid     string `protobuf:"bytes,5,opt,name=smid,proto3" json:"smid,omitempty"`
	Amount   int64  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Desc     string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	Ntfurl   string `protobuf:"bytes,8,opt,name=ntfurl,proto3" json:"ntfurl,omitempty"`
	Payway   string `protobuf:"bytes,9,opt,name=payway,proto3" json:"payway,omitempty"`
	Isfrozen bool   `protobuf:"varint,10,opt,name=isfrozen,proto3" json:"isfrozen,omitempty"`
	Status   string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	Expire   string `protobuf:"bytes,12,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *TradeNode) Reset() {
	*x = TradeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeNode) ProtoMessage() {}

func (x *TradeNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeNode.ProtoReflect.Descriptor instead.
func (*TradeNode) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{1}
}

func (x *TradeNode) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *TradeNode) GetCashier() string {
	if x != nil {
		return x.Cashier
	}
	return ""
}

func (x *TradeNode) GetPayer() string {
	if x != nil {
		return x.Payer
	}
	return ""
}

func (x *TradeNode) GetPayee() string {
	if x != nil {
		return x.Payee
	}
	return ""
}

func (x *TradeNode) GetSmid() string {
	if x != nil {
		return x.Smid
	}
	return ""
}

func (x *TradeNode) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TradeNode) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TradeNode) GetNtfurl() string {
	if x != nil {
		return x.Ntfurl
	}
	return ""
}

func (x *TradeNode) GetPayway() string {
	if x != nil {
		return x.Payway
	}
	return ""
}

func (x *TradeNode) GetIsfrozen() bool {
	if x != nil {
		return x.Isfrozen
	}
	return false
}

func (x *TradeNode) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TradeNode) GetExpire() string {
	if x != nil {
		return x.Expire
	}
	return ""
}

type DiviNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cashier       string `protobuf:"bytes,1,opt,name=cashier,proto3" json:"cashier,omitempty"`
	Smid          string `protobuf:"bytes,2,opt,name=smid,proto3" json:"smid,omitempty"`
	TransactionId string `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Commission    int64  `protobuf:"varint,4,opt,name=commission,proto3" json:"commission,omitempty"`
	Desc          string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	Isfinsh       bool   `protobuf:"varint,6,opt,name=isfinsh,proto3" json:"isfinsh,omitempty"`
}

func (x *DiviNode) Reset() {
	*x = DiviNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiviNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiviNode) ProtoMessage() {}

func (x *DiviNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiviNode.ProtoReflect.Descriptor instead.
func (*DiviNode) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{2}
}

func (x *DiviNode) GetCashier() string {
	if x != nil {
		return x.Cashier
	}
	return ""
}

func (x *DiviNode) GetSmid() string {
	if x != nil {
		return x.Smid
	}
	return ""
}

func (x *DiviNode) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *DiviNode) GetCommission() int64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *DiviNode) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DiviNode) GetIsfinsh() bool {
	if x != nil {
		return x.Isfinsh
	}
	return false
}

type RefundNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cashier  string `protobuf:"bytes,1,opt,name=cashier,proto3" json:"cashier,omitempty"`
	TradeNo  string `protobuf:"bytes,2,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`
	Payer    string `protobuf:"bytes,3,opt,name=payer,proto3" json:"payer,omitempty"`
	Payee    string `protobuf:"bytes,4,opt,name=payee,proto3" json:"payee,omitempty"`
	Smid     string `protobuf:"bytes,5,opt,name=smid,proto3" json:"smid,omitempty"`
	RefundId string `protobuf:"bytes,6,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`
	Amount   int64  `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Desc     string `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	Status   string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Ntfurl   string `protobuf:"bytes,10,opt,name=ntfurl,proto3" json:"ntfurl,omitempty"`
}

func (x *RefundNode) Reset() {
	*x = RefundNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundNode) ProtoMessage() {}

func (x *RefundNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundNode.ProtoReflect.Descriptor instead.
func (*RefundNode) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{3}
}

func (x *RefundNode) GetCashier() string {
	if x != nil {
		return x.Cashier
	}
	return ""
}

func (x *RefundNode) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *RefundNode) GetPayer() string {
	if x != nil {
		return x.Payer
	}
	return ""
}

func (x *RefundNode) GetPayee() string {
	if x != nil {
		return x.Payee
	}
	return ""
}

func (x *RefundNode) GetSmid() string {
	if x != nil {
		return x.Smid
	}
	return ""
}

func (x *RefundNode) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *RefundNode) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RefundNode) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RefundNode) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RefundNode) GetNtfurl() string {
	if x != nil {
		return x.Ntfurl
	}
	return ""
}

type PayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payway    string `protobuf:"bytes,1,opt,name=payway,proto3" json:"payway,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Wxpayinfo string `protobuf:"bytes,3,opt,name=wxpayinfo,proto3" json:"wxpayinfo,omitempty"`
	Alpayinfo string `protobuf:"bytes,4,opt,name=alpayinfo,proto3" json:"alpayinfo,omitempty"`
}

func (x *PayInfo) Reset() {
	*x = PayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayInfo) ProtoMessage() {}

func (x *PayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayInfo.ProtoReflect.Descriptor instead.
func (*PayInfo) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{4}
}

func (x *PayInfo) GetPayway() string {
	if x != nil {
		return x.Payway
	}
	return ""
}

func (x *PayInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PayInfo) GetWxpayinfo() string {
	if x != nil {
		return x.Wxpayinfo
	}
	return ""
}

func (x *PayInfo) GetAlpayinfo() string {
	if x != nil {
		return x.Alpayinfo
	}
	return ""
}

type CombineNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cashier  string       `protobuf:"bytes,1,opt,name=cashier,proto3" json:"cashier,omitempty"`
	Expire   string       `protobuf:"bytes,2,opt,name=expire,proto3" json:"expire,omitempty"`
	SubOrder []*TradeNode `protobuf:"bytes,3,rep,name=sub_order,json=subOrder,proto3" json:"sub_order,omitempty"`
}

func (x *CombineNode) Reset() {
	*x = CombineNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineNode) ProtoMessage() {}

func (x *CombineNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineNode.ProtoReflect.Descriptor instead.
func (*CombineNode) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{5}
}

func (x *CombineNode) GetCashier() string {
	if x != nil {
		return x.Cashier
	}
	return ""
}

func (x *CombineNode) GetExpire() string {
	if x != nil {
		return x.Expire
	}
	return ""
}

func (x *CombineNode) GetSubOrder() []*TradeNode {
	if x != nil {
		return x.SubOrder
	}
	return nil
}

type No struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *No) Reset() {
	*x = No{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *No) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*No) ProtoMessage() {}

func (x *No) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use No.ProtoReflect.Descriptor instead.
func (*No) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{6}
}

func (x *No) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type NoAment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Amount int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *NoAment) Reset() {
	*x = NoAment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoAment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoAment) ProtoMessage() {}

func (x *NoAment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoAment.ProtoReflect.Descriptor instead.
func (*NoAment) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{7}
}

func (x *NoAment) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *NoAment) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type UpTrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string     `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Ticket *TradeNode `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *UpTrade) Reset() {
	*x = UpTrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpTrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpTrade) ProtoMessage() {}

func (x *UpTrade) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpTrade.ProtoReflect.Descriptor instead.
func (*UpTrade) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{8}
}

func (x *UpTrade) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *UpTrade) GetTicket() *TradeNode {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type UpRefund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string      `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Ticket *RefundNode `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *UpRefund) Reset() {
	*x = UpRefund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpRefund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpRefund) ProtoMessage() {}

func (x *UpRefund) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpRefund.ProtoReflect.Descriptor instead.
func (*UpRefund) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{9}
}

func (x *UpRefund) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *UpRefund) GetTicket() *RefundNode {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type TradeUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo string `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`
	Openid  string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *TradeUID) Reset() {
	*x = TradeUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeUID) ProtoMessage() {}

func (x *TradeUID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeUID.ProtoReflect.Descriptor instead.
func (*TradeUID) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{10}
}

func (x *TradeUID) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *TradeUID) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type JSPayRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo   string `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`
	Appid     string `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Noncestr  string `protobuf:"bytes,4,opt,name=noncestr,proto3" json:"noncestr,omitempty"`
	Package   string `protobuf:"bytes,5,opt,name=package,proto3" json:"package,omitempty"`
	Signtype  string `protobuf:"bytes,6,opt,name=signtype,proto3" json:"signtype,omitempty"`
	Paysign   string `protobuf:"bytes,7,opt,name=paysign,proto3" json:"paysign,omitempty"`
}

func (x *JSPayRet) Reset() {
	*x = JSPayRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JSPayRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JSPayRet) ProtoMessage() {}

func (x *JSPayRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JSPayRet.ProtoReflect.Descriptor instead.
func (*JSPayRet) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{11}
}

func (x *JSPayRet) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *JSPayRet) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *JSPayRet) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *JSPayRet) GetNoncestr() string {
	if x != nil {
		return x.Noncestr
	}
	return ""
}

func (x *JSPayRet) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *JSPayRet) GetSigntype() string {
	if x != nil {
		return x.Signtype
	}
	return ""
}

func (x *JSPayRet) GetPaysign() string {
	if x != nil {
		return x.Paysign
	}
	return ""
}

type QueryRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutTradeNo     string `protobuf:"bytes,1,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	TransactionId  string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TradeType      string `protobuf:"bytes,3,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	TradeState     string `protobuf:"bytes,4,opt,name=trade_state,json=tradeState,proto3" json:"trade_state,omitempty"`
	TradeStateDesc string `protobuf:"bytes,5,opt,name=trade_state_desc,json=tradeStateDesc,proto3" json:"trade_state_desc,omitempty"`
	SuccessTime    string `protobuf:"bytes,6,opt,name=success_time,json=successTime,proto3" json:"success_time,omitempty"`
}

func (x *QueryRet) Reset() {
	*x = QueryRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRet) ProtoMessage() {}

func (x *QueryRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRet.ProtoReflect.Descriptor instead.
func (*QueryRet) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{12}
}

func (x *QueryRet) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *QueryRet) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *QueryRet) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *QueryRet) GetTradeState() string {
	if x != nil {
		return x.TradeState
	}
	return ""
}

func (x *QueryRet) GetTradeStateDesc() string {
	if x != nil {
		return x.TradeStateDesc
	}
	return ""
}

func (x *QueryRet) GetSuccessTime() string {
	if x != nil {
		return x.SuccessTime
	}
	return ""
}

type QueryRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundId            string `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`
	OutRefundNo         string `protobuf:"bytes,2,opt,name=out_refund_no,json=outRefundNo,proto3" json:"out_refund_no,omitempty"`
	TransactionId       string `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	OutTradeNo          string `protobuf:"bytes,4,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	Channel             string `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	UserReceivedAccount string `protobuf:"bytes,6,opt,name=user_received_account,json=userReceivedAccount,proto3" json:"user_received_account,omitempty"`
	SuccessTime         string `protobuf:"bytes,7,opt,name=success_time,json=successTime,proto3" json:"success_time,omitempty"`
	CreateTime          string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Status              string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *QueryRef) Reset() {
	*x = QueryRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRef) ProtoMessage() {}

func (x *QueryRef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRef.ProtoReflect.Descriptor instead.
func (*QueryRef) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{13}
}

func (x *QueryRef) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *QueryRef) GetOutRefundNo() string {
	if x != nil {
		return x.OutRefundNo
	}
	return ""
}

func (x *QueryRef) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *QueryRef) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *QueryRef) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *QueryRef) GetUserReceivedAccount() string {
	if x != nil {
		return x.UserReceivedAccount
	}
	return ""
}

func (x *QueryRef) GetSuccessTime() string {
	if x != nil {
		return x.SuccessTime
	}
	return ""
}

func (x *QueryRef) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryRef) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RefundNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo  string `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`
	RefundNo string `protobuf:"bytes,2,opt,name=refund_no,json=refundNo,proto3" json:"refund_no,omitempty"`
}

func (x *RefundNo) Reset() {
	*x = RefundNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundNo) ProtoMessage() {}

func (x *RefundNo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundNo.ProtoReflect.Descriptor instead.
func (*RefundNo) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{14}
}

func (x *RefundNo) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *RefundNo) GetRefundNo() string {
	if x != nil {
		return x.RefundNo
	}
	return ""
}

type RefundRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime string `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Status     string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RefundRet) Reset() {
	*x = RefundRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundRet) ProtoMessage() {}

func (x *RefundRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundRet.ProtoReflect.Descriptor instead.
func (*RefundRet) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{15}
}

func (x *RefundRet) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RefundRet) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TradeNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo string `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`
}

func (x *TradeNo) Reset() {
	*x = TradeNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeNo) ProtoMessage() {}

func (x *TradeNo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeNo.ProtoReflect.Descriptor instead.
func (*TradeNo) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{16}
}

func (x *TradeNo) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

type AppPayRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo   string `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`
	Appid     string `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
	Partnerid string `protobuf:"bytes,3,opt,name=partnerid,proto3" json:"partnerid,omitempty"`
	PrepayId  string `protobuf:"bytes,4,opt,name=prepay_id,json=prepayId,proto3" json:"prepay_id,omitempty"`
	Package   string `protobuf:"bytes,5,opt,name=package,proto3" json:"package,omitempty"`
	Noncestr  string `protobuf:"bytes,6,opt,name=noncestr,proto3" json:"noncestr,omitempty"`
	Timestamp string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,8,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *AppPayRet) Reset() {
	*x = AppPayRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wgpay_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPayRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPayRet) ProtoMessage() {}

func (x *AppPayRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wgpay_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPayRet.ProtoReflect.Descriptor instead.
func (*AppPayRet) Descriptor() ([]byte, []int) {
	return file_proto_wgpay_proto_rawDescGZIP(), []int{17}
}

func (x *AppPayRet) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *AppPayRet) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *AppPayRet) GetPartnerid() string {
	if x != nil {
		return x.Partnerid
	}
	return ""
}

func (x *AppPayRet) GetPrepayId() string {
	if x != nil {
		return x.PrepayId
	}
	return ""
}

func (x *AppPayRet) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *AppPayRet) GetNoncestr() string {
	if x != nil {
		return x.Noncestr
	}
	return ""
}

func (x *AppPayRet) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *AppPayRet) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

var File_proto_wgpay_proto protoreflect.FileDescriptor

var file_proto_wgpay_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x67, 0x70, 0x61, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x08, 0x0a, 0x06, 0x50, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0xa8, 0x02, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x79, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61,
	0x79, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x74, 0x66, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x74, 0x66, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x79, 0x77, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x79,
	0x77, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22,
	0xad, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x76, 0x69, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6d, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6d, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x66, 0x69, 0x6e, 0x73, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x66, 0x69, 0x6e, 0x73, 0x68, 0x22,
	0xfa, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x79,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6d, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x74, 0x66, 0x75, 0x72, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x74, 0x66, 0x75, 0x72, 0x6c, 0x22, 0x75, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x77, 0x61,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x79, 0x77, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x78, 0x70, 0x61, 0x79,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x78, 0x70, 0x61,
	0x79, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x70, 0x61, 0x79, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x70, 0x61, 0x79, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0x1c, 0x0a, 0x02, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x39, 0x0a, 0x07, 0x4e, 0x6f, 0x41, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x07,
	0x55, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x4d, 0x0a, 0x08, 0x55, 0x70, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x3d, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x55, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x08, 0x4a, 0x53, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x22,
	0xe0, 0x01, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0c,
	0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xbe, 0x02, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x42, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x22, 0x44, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a,
	0x07, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x22, 0xdf, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x73, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x73, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x32, 0x82, 0x07, 0x0a, 0x05, 0x57, 0x67, 0x70, 0x61, 0x79, 0x12,
	0x26, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x09, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x12, 0x27, 0x0a, 0x08, 0x47, 0x65, 0x6e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f,
	0x12, 0x2b, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x12, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x1a, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x12, 0x29, 0x0a,
	0x09, 0x47, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x09, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x12, 0x2e, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x41, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x41, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0b, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x6f, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x28, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x12, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x1a, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4e, 0x6f, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x44, 0x69, 0x76, 0x69, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x1a, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x2c, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x4a, 0x53, 0x50, 0x61, 0x79, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x55, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4a, 0x53, 0x50, 0x61, 0x79, 0x52, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x4a, 0x53, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x55, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a,
	0x53, 0x50, 0x61, 0x79, 0x52, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f,
	0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x74, 0x12, 0x30, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e,
	0x6f, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x50, 0x61, 0x79, 0x12, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x1a, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x61, 0x79, 0x52, 0x65, 0x74, 0x12,
	0x29, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x09,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_wgpay_proto_rawDescOnce sync.Once
	file_proto_wgpay_proto_rawDescData = file_proto_wgpay_proto_rawDesc
)

func file_proto_wgpay_proto_rawDescGZIP() []byte {
	file_proto_wgpay_proto_rawDescOnce.Do(func() {
		file_proto_wgpay_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_wgpay_proto_rawDescData)
	})
	return file_proto_wgpay_proto_rawDescData
}

var file_proto_wgpay_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_wgpay_proto_goTypes = []interface{}{
	(*PEmpty)(nil),      // 0: proto.PEmpty
	(*TradeNode)(nil),   // 1: proto.TradeNode
	(*DiviNode)(nil),    // 2: proto.DiviNode
	(*RefundNode)(nil),  // 3: proto.RefundNode
	(*PayInfo)(nil),     // 4: proto.PayInfo
	(*CombineNode)(nil), // 5: proto.CombineNode
	(*No)(nil),          // 6: proto.No
	(*NoAment)(nil),     // 7: proto.NoAment
	(*UpTrade)(nil),     // 8: proto.UpTrade
	(*UpRefund)(nil),    // 9: proto.UpRefund
	(*TradeUID)(nil),    // 10: proto.TradeUID
	(*JSPayRet)(nil),    // 11: proto.JSPayRet
	(*QueryRet)(nil),    // 12: proto.QueryRet
	(*QueryRef)(nil),    // 13: proto.QueryRef
	(*RefundNo)(nil),    // 14: proto.RefundNo
	(*RefundRet)(nil),   // 15: proto.RefundRet
	(*TradeNo)(nil),     // 16: proto.TradeNo
	(*AppPayRet)(nil),   // 17: proto.AppPayRet
}
var file_proto_wgpay_proto_depIdxs = []int32{
	1,  // 0: proto.CombineNode.sub_order:type_name -> proto.TradeNode
	1,  // 1: proto.UpTrade.ticket:type_name -> proto.TradeNode
	3,  // 2: proto.UpRefund.ticket:type_name -> proto.RefundNode
	1,  // 3: proto.Wgpay.GenCard:input_type -> proto.TradeNode
	1,  // 4: proto.Wgpay.GenTrade:input_type -> proto.TradeNode
	5,  // 5: proto.Wgpay.GenCombine:input_type -> proto.CombineNode
	3,  // 6: proto.Wgpay.GenRefund:input_type -> proto.RefundNode
	7,  // 7: proto.Wgpay.ChangeTAmount:input_type -> proto.NoAment
	7,  // 8: proto.Wgpay.ChangeRAmount:input_type -> proto.NoAment
	6,  // 9: proto.Wgpay.RevokeTrade:input_type -> proto.No
	6,  // 10: proto.Wgpay.RevokeRefund:input_type -> proto.No
	8,  // 11: proto.Wgpay.UpdateTrade:input_type -> proto.UpTrade
	9,  // 12: proto.Wgpay.UpdateRefund:input_type -> proto.UpRefund
	6,  // 13: proto.Wgpay.TradeTicket:input_type -> proto.No
	6,  // 14: proto.Wgpay.CombineTicket:input_type -> proto.No
	6,  // 15: proto.Wgpay.DiviTicket:input_type -> proto.No
	6,  // 16: proto.Wgpay.RefundTicket:input_type -> proto.No
	10, // 17: proto.Wgpay.JSPay:input_type -> proto.TradeUID
	10, // 18: proto.Wgpay.CombineJS:input_type -> proto.TradeUID
	6,  // 19: proto.Wgpay.QueryTrade:input_type -> proto.No
	14, // 20: proto.Wgpay.TradeRefund:input_type -> proto.RefundNo
	16, // 21: proto.Wgpay.AppPay:input_type -> proto.TradeNo
	6,  // 22: proto.Wgpay.QueryRefund:input_type -> proto.No
	6,  // 23: proto.Wgpay.GenCard:output_type -> proto.No
	6,  // 24: proto.Wgpay.GenTrade:output_type -> proto.No
	6,  // 25: proto.Wgpay.GenCombine:output_type -> proto.No
	6,  // 26: proto.Wgpay.GenRefund:output_type -> proto.No
	0,  // 27: proto.Wgpay.ChangeTAmount:output_type -> proto.PEmpty
	0,  // 28: proto.Wgpay.ChangeRAmount:output_type -> proto.PEmpty
	0,  // 29: proto.Wgpay.RevokeTrade:output_type -> proto.PEmpty
	0,  // 30: proto.Wgpay.RevokeRefund:output_type -> proto.PEmpty
	0,  // 31: proto.Wgpay.UpdateTrade:output_type -> proto.PEmpty
	0,  // 32: proto.Wgpay.UpdateRefund:output_type -> proto.PEmpty
	1,  // 33: proto.Wgpay.TradeTicket:output_type -> proto.TradeNode
	5,  // 34: proto.Wgpay.CombineTicket:output_type -> proto.CombineNode
	2,  // 35: proto.Wgpay.DiviTicket:output_type -> proto.DiviNode
	3,  // 36: proto.Wgpay.RefundTicket:output_type -> proto.RefundNode
	11, // 37: proto.Wgpay.JSPay:output_type -> proto.JSPayRet
	11, // 38: proto.Wgpay.CombineJS:output_type -> proto.JSPayRet
	12, // 39: proto.Wgpay.QueryTrade:output_type -> proto.QueryRet
	15, // 40: proto.Wgpay.TradeRefund:output_type -> proto.RefundRet
	17, // 41: proto.Wgpay.AppPay:output_type -> proto.AppPayRet
	13, // 42: proto.Wgpay.QueryRefund:output_type -> proto.QueryRef
	23, // [23:43] is the sub-list for method output_type
	3,  // [3:23] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_wgpay_proto_init() }
func file_proto_wgpay_proto_init() {
	if File_proto_wgpay_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_wgpay_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiviNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*No); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoAment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpTrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpRefund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JSPayRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wgpay_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPayRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_wgpay_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_wgpay_proto_goTypes,
		DependencyIndexes: file_proto_wgpay_proto_depIdxs,
		MessageInfos:      file_proto_wgpay_proto_msgTypes,
	}.Build()
	File_proto_wgpay_proto = out.File
	file_proto_wgpay_proto_rawDesc = nil
	file_proto_wgpay_proto_goTypes = nil
	file_proto_wgpay_proto_depIdxs = nil
}
